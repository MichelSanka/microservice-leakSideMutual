# Documentation paramètres Sonde PH Nudge Java : https://nudge-apm.com/config-probe-java_fr
# Ceci est le fichier de propriétés pour une application en environnement de production
# Vous pouvez décommenter/commenter les paramètres selon votre besoin


### Paramètres obligatoires ####################################################################
# Application ID
app_id=462dc76b-6961-446d-8f4d-af5988424c83

# Définit quel portail de Nudge APM est à utiliser et indique si l’installation est en local lorsqu’elle est déployé en On-Premises, ou par défaut en Saas.
server_url=http://localhost:8081/

################################################################################################


### Paramètres importants #######################################################################

# Java 17 compatibilité
# décommenter pour l'utilisation de java 17 applications
# excluded_classpath=jdk.proxy2

# Tests conducted on our environments have shown that in some cases, excluding the jdk.proxy2 package alone is not enough.
# Certain tests sur nos environments on montré  qu’exclure jdk.proxy2 package seulement n'est pas suffisant
# Si vous avez des problèmes pour lancer l'agent, faite les modifications suivante
# excluded_classpath=jdk.proxy2,jdk.proxy3


# Liste des destinations des données collectées
# Différentes valeurs utilisables :
# - http: Envoie des données au collecteur PH Nudge spécifié par server_url ("http" est une valeur définie, la changer ne modifie pas le protocole)
# - file: Stockage des données en local dans le dossier de logs
handlers=http


# Rotation des fichiers de logs à garder
log_rotation_count=5


# Niveau de log, valeur par défaut SEVERE
# Différentes valeurs utilisables :
# - DEBUG : Log du debug
# - FINEST : Log le plus détaillé
# - FINE : Log détaillé
# - ERROR : Log des erreurs
# - SEVERE : Log des information graves
# - WARN : Log des warnings
# - INFO : Log les infos
log_level=SEVERE

# Active l'injection je Javascript RUM dans les pages HTML produites par le serveur d'application
activate_rum=true

################################################################################################



### Paramètres techniques ***à modifier selon les besoins*** ###################################

# Emplacements du code devant faire l'objet de monitoring (comme pour les transactions), au format regex.
# Champs : <visibilité> <package> <methode> <nom de layer> <type>
# Exemple n°1 : * com.xyz.* * Service tx
# 	toutes les méthodes du package com.xyz sont instrumentées en tant que transaction de type Service
# Exemple n°2 : public org.slf4j.impl.Log4jLoggerAdapter * Log4j layer
# 	crée une couche "Log4j" depuis slf4j pour suivre les logs en tant que couche
#trace_classpath_regex=* org.springframework.samples.petclinic.system.* welcome
#trace_classpath_regex=


# Décommenter cette ligne afin d'afficher l'ip des services en clair
http_client_ip=false


## Paramètres HTTP

# Active la capture des paramètres HTTP
# Note : Ce paramètre est forcément accompagné soit du paramètre ignored_params OU allowed_params
capture_params=true

# Liste des paramètres ignorés dans les appels HTTP
# Exemple : ignored_params=password,card_number
#ignored_params=


## Headers HTTP

# Active la capture des headers HTTP
# Attention : Ce paramètre est forcément accompagné soit du paramètre ignored_headers OU allowed_headers
capture_headers=true

# Liste des headers ignorés dans les appels HTTP
# Exemple : ignored_headers=Authorization,Proxy-Authenticate
#ignored_headers=


# Crée une transaction pour le démarrage et arrêt d’une application web, permet de diagnostiquer les ralentissements lors de ces phases du déploiement.
log_servlet_contextlistener=true

# Enregistre les connections aux bases de données dans les logs
#log_connection=true

# Upload les logs de l'agent à la plateforme nudge pour faire remonter toutes les erreurs et faciliter le support
upload_log=true


## Profiling

# Active l'échantillonage du profiling
profiling_enable=true

# Profondeux maximale de capture des threads
# Note : une valeur basse minimise le poids des données de profilage, mais le profilage sera moins précis.
profiling_thread_depth=1000

# Intervale d'échantillonage du profiling, en millisecondes
# Note : Si vos transactions sont très rapides ou que vous avez seulement peu de transactions par jour,
# vous avez besoin d'une plus grande précision, ce qui se raduit par "plus d'échantillonage". Vous devriez alors baisser cette valeur.
profiling_sample_interval=1000

# Temps max alloué à l'échantillonage de profiling, en millisecondes
profiling_sample_max_time=10



# Active la compression des données pour l'envoi vers la plateforme.
# Avec la compression, la taille des données envoyées est reduite de 90% ce qui allège le CPU
#compressed=true

# Upload la configuration de l'agent à la plateforme nudge pour faire remonter toutes les erreurs et faciliter le support
upload_config=true

# Dossier utlisé pour les logs. Par défault créée et utilise le dossier "log" situé à coté de l'agent.
# log_directory=

# Dossier où sont stockées les données lorsque la plateforme Nudge est injoignable.
# disk_fallback_directory=



### Diagnostique

## Dump des threads depuis le lancement de la JVM, au format .zip
## Attention : le Dump des Threads peut être coûteux en ressources

# Fréquence de dump des threads
# Notes :
# - Mettre à 0 désactive le dump de thread,
# - Ce paramètre est forcément inférieur à thread_dump_duration
#thread_dump_frequency=300

# Durée de dump des threads
# Notes :
# - Mettre à 0 désactive le dump de thread,
# - Ce paramètre est actif seulement lorsque thread_dump_frequency est supérieur à 0
# - Ce paramètre est forcément supérieur à thread_dump_frequency
#thread_dump_duration=1800


# Augmente le niveaux de log à FINE (détaillé) pendant quelques minutes après le lancement, ce qui permet de faciliter le support
#fine_log_on_startup=true


# Préfixe le nom des transactions avec leur type
#prepend_tx_type=true

# Ecrit en log la stackTrace d'une méthode instrumentée
#instrumented_code_stracktraces=true




### Paramètres sensibles ***NE PAS MODIFIER***

# Active le suivi de Runnable, Threads et TimerTask
#log_runnable=true
